/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&sl { ignore-modifiers; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ae_umlaut {
            bindings = <&kp RA(Q)>;
            key-positions = <13 14>;
            layers = <0>;
            timeout-ms = <30>;
        };

        szet {
            bindings = <&kp RA(S)>;
            key-positions = <14 15>;
            timeout-ms = <30>;
        };

        ue_umlaut {
            bindings = <&kp RA(Y)>;
            key-positions = <7 8>;
            timeout-ms = <30>;
        };

        oe_umlaut {
            bindings = <&kp RA(P)>;
            key-positions = <9 10>;
            timeout-ms = <30>;
        };

        f13 {
            bindings = <&kp F13>;
            key-positions = <2 1>;
            timeout-ms = <30>;
        };

        f14 {
            bindings = <&kp F14>;
            key-positions = <3 2>;
            timeout-ms = <30>;
        };

        f15 {
            bindings = <&kp F15>;
            key-positions = <3 4>;
            timeout-ms = <30>;
        };

        f16 {
            bindings = <&kp F16>;
            key-positions = <4 5>;
            timeout-ms = <30>;
        };

        sticky_f_layer {
            bindings = <&sl 4>;
            key-positions = <31 32>;
        };

        sticky_nums {
            bindings = <&sl 1>;
            key-positions = <28 27>;
        };
    };

    macros {
        sqt_spc: sqt_spc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SPACE>;
            label = "SQT_SPC";
        };
    };

    behaviors {
        hkp_sk: hkp_sk {
            compatible = "zmk,behavior-hold-tap";
            label = "HKP_SK";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        homerow_mods: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |                   |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|                   | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC    &kp Q  &kp W                       &kp E                  &kp R                     &kp T          &kp Y        &kp U                      &kp I                       &kp O                        &kp P     &kp BSPC
&kp TAB    &kp A  &homerow_mods LEFT_SHIFT S  &homerow_mods LCTRL D  &homerow_mods LEFT_ALT F  &kp G          &kp H        &homerow_mods RIGHT_ALT J  &homerow_mods LCTRL K       &homerow_mods RIGHT_SHIFT L  &kp SEMI  &sqt_spc
&kp LSHFT  &kp Z  &kp X                       &kp C                  &kp V                     &kp B          &kp N        &kp M                      &kp COMMA                   &kp DOT                      &kp FSLH  &kp RSHFT
                  &kp LGUI                    &kp LALT               &kp LCTRL                 &lt 1 ENTER    &lt 2 SPACE  &hkp_sk RCTRL LCTRL        &hkp_sk RIGHT_ALT LEFT_ALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |                   |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |                   |      |       |       |      |

            bindings = <
&kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4    &kp N5       &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &trans
&trans     &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC     &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                      &none      &trans       &trans    &trans       &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |                |      |      |       |      |       |       |
            //              |      |       |       |      |                |      |      |       |      |

            bindings = <
&trans  &kp INS     &kp PSCRN  &kp K_CMENU  &trans       &trans      &trans  &kp HOME  &kp UP    &kp END    &trans   &trans
&trans  &trans      &trans     &trans       &trans       &kp CLCK    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &trans
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY   &kp K_PASTE  &trans      &trans  &trans    &trans    &trans     &trans   &trans
                    &trans     &trans       &trans       &trans      &trans  &trans    &trans    &none
            >;
        };

        // ------------------------------------------------------------------------------------------------------------
        // |BTCLR | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
        // |      |       |       |       |       |       |                |      |      |       |      |       |       |
        // |      |       |       |       |       |       |                |      |      |       |      |       |       |
        //                |       |       |       |       |                |      |      |       |      |

        Adjust_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &sys_reset  &none  &none  &none  &none  &bootloader
&trans      &none         &none         &none         &none         &none           &none       &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none           &none       &none  &none  &none  &none  &none
                          &none         &none         &none         &none           &none       &none  &none  &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp F1  &kp F2     &kp F3     &kp F4        &kp F5    &kp F6  &kp F7        &kp F8     &kp F9           &kp F10  &kp F11
&trans  &trans  &sk LSHFT  &sk LCTRL  &sk LEFT_ALT  &trans    &trans  &sk LEFT_ALT  &sk RCTRL  &sk RIGHT_SHIFT  &trans   &kp F12
&trans  &trans  &trans     &trans     &trans        &trans    &trans  &trans        &trans     &trans           &trans   &trans
                &trans     &trans     &trans        &trans    &trans  &trans        &trans     &trans
            >;
        };
    };
};
